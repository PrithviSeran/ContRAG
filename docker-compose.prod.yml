version: '3.8'

services:
  neo4j:
    image: neo4j:5.20-community
    container_name: graphrag-neo4j-prod
    restart: unless-stopped
    environment:
      - NEO4J_AUTH=neo4j/graphrag_secure_password_2024
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_memory_heap_initial__size=1G
      - NEO4J_dbms_memory_heap_max__size=2G
      - NEO4J_dbms_memory_pagecache_size=1G
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data_prod:/data
      - neo4j_logs_prod:/logs
      - neo4j_conf_prod:/conf
      - ./config/neo4j.conf:/conf/neo4j.conf:ro
    networks:
      - graphrag-network

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: graphrag-backend-prod
    restart: unless-stopped
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=graphrag_secure_password_2024
      - ENVIRONMENT=production
    ports:
      - "8000:8000"
    volumes:
      - backend_uploads_prod:/app/uploads
      - backend_cache_prod:/app/cache
    depends_on:
      - neo4j
    networks:
      - graphrag-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  graphrag-network:
    driver: bridge

volumes:
  neo4j_data_prod:
    driver: local
  neo4j_logs_prod:
    driver: local
  neo4j_conf_prod:
    driver: local
  backend_uploads_prod:
    driver: local
  backend_cache_prod:
    driver: local 